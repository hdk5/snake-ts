{"version":3,"sources":["webpack:///webpack/bootstrap 20056d3dcf912aa90cf5","webpack:///./src/Direction.ts","webpack:///./src/Util.ts","webpack:///./src/Coords.ts","webpack:///./src/Game.ts","webpack:///./src/app.ts","webpack:///./src/CanvasHelper.ts","webpack:///./src/tilemap.ts","webpack:///./src/tilemap/food.png","webpack:///./src/tilemap/field_empty.png","webpack:///./src/tilemap/field_wall.png","webpack:///./src/tilemap/enemy_head.png","webpack:///./src/tilemap/enemy_tail.png","webpack:///./src/tilemap/enemy_straight.png","webpack:///./src/tilemap/enemy_rotate.png","webpack:///./src/tilemap/player_head.png","webpack:///./src/tilemap/player_tail.png","webpack:///./src/tilemap/player_straight.png","webpack:///./src/tilemap/player_rotate.png","webpack:///./src/AiHelper.ts","webpack:///./src/HtmlHelper.ts","webpack:///./src/GamePreset.ts","webpack:///./src/Snake.ts","webpack:///./src/Field.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 20056d3dcf912aa90cf5","class Direction {\r\n    public static Up = new Direction(\"Up\");\r\n    public static Down = new Direction(\"Down\");\r\n    public static Left = new Direction(\"Left\");\r\n    public static Right = new Direction(\"Right\");\r\n\r\n    constructor(private id: string) {\r\n    }\r\n\r\n    reverse(): Direction {\r\n        switch (this) {\r\n            case Direction.Left:\r\n                return Direction.Right;\r\n            case Direction.Right:\r\n                return Direction.Left;\r\n            case Direction.Up:\r\n                return Direction.Down;\r\n            case Direction.Down:\r\n                return Direction.Up;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Direction;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Direction.ts","export default class Util {\r\n    static mod(divident: number, divisor: number): number {\r\n        return ((divident % divisor) + divisor) % divisor;\r\n    };\r\n\r\n    static choice<T>(arr: Array<T>): T {\r\n        return arr[Math.floor(Math.random() * arr.length)] || null;\r\n    }\r\n\r\n    static arrayClone<T extends { clone: () => T }>(arr: Array<T>): Array<T> {\r\n        let clone: Array<T> = [];\r\n        for (let obj of arr) {\r\n            clone.push(obj.clone());\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    static arrayContains<T extends { equals: (T) => boolean }>(arr: Array<T>, el: T): boolean {\r\n        for (let obj of arr) {\r\n            if (obj.equals(el))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Util.ts","export default class Coords {\r\n    constructor(row: number, column: number) {\r\n        this._row = row;\r\n        this._column = column;\r\n    }\r\n\r\n    private _row: number;\r\n\r\n    get row(): number {\r\n        return this._row;\r\n    }\r\n\r\n    set row(value: number) {\r\n        this._row = value;\r\n    }\r\n\r\n    private _column: number;\r\n\r\n    get column(): number {\r\n        return this._column;\r\n    }\r\n\r\n    set column(value: number) {\r\n        this._column = value;\r\n    }\r\n\r\n    clone(): Coords {\r\n        return new Coords(this._row, this._column)\r\n    }\r\n\r\n    equals(obj: Coords): boolean {\r\n        return this.row == obj.row && this.column == obj.column;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Coords.ts","import Snake from \"./Snake\";\r\nimport Coords from \"./Coords\";\r\nimport Direction from \"./Direction\";\r\nimport Field from \"./Field\";\r\nimport GamePreset from \"./GamePreset\";\r\nimport CanvasHelper from \"./CanvasHelper\";\r\nimport Util from \"./Util\";\r\nimport AiHelper from \"./AiHelper\";\r\nimport HtmlHelper from \"./HtmlHelper\";\r\n\r\nexport default class Game {\r\n    static readonly CELL_SIZE: number = 25;\r\n    private _lastFrameTimeStamp: number;\r\n    private _snakes: Array<Snake>;\r\n    private _field: Field;\r\n    private _food: Coords;\r\n    private _frameId: number;\r\n    private _canvasHelper: CanvasHelper;\r\n    private _htmlHelper: HtmlHelper;\r\n\r\n    constructor(htmlRoot: HTMLElement) {\r\n        this._htmlHelper = new HtmlHelper(this, htmlRoot);\r\n        this._canvasHelper = new CanvasHelper(this);\r\n        this._htmlHelper.gameInit();\r\n\r\n        this.canvas.tabIndex = 0;\r\n        this.canvas.onkeydown = ev => {\r\n            switch (ev.keyCode) {\r\n                case 37:\r\n                    this._player.direction = Direction.Left;\r\n                    break;\r\n                case 38:\r\n                    this._player.direction = Direction.Up;\r\n                    break;\r\n                case 39:\r\n                    this._player.direction = Direction.Right;\r\n                    break;\r\n                case 40:\r\n                    this._player.direction = Direction.Down;\r\n                    break;\r\n            }\r\n        };\r\n\r\n\r\n        console.log(\"Game object created.\");\r\n    }\r\n\r\n    private _score: number;\r\n\r\n    get score(): number {\r\n        return this._score;\r\n    }\r\n\r\n    get htmlRoot(): HTMLElement {\r\n        return this._htmlHelper.root;\r\n    }\r\n\r\n    private _difficulty: number;\r\n\r\n    get difficulty(): number {\r\n        return this._difficulty;\r\n    }\r\n\r\n    set difficulty(value: number) {\r\n        this._difficulty = value;\r\n    }\r\n\r\n    get canvas(): HTMLCanvasElement {\r\n        return this._htmlHelper.canvas;\r\n    };\r\n\r\n    private get _player(): Snake {\r\n        return this._snakes[0]\r\n    }\r\n\r\n    private get _enemies(): Array<Snake> {\r\n        return this._snakes.slice(1);\r\n    }\r\n\r\n    static checkCollisions(self: Array<Coords>, other: Array<Coords>): Coords {\r\n        for (let i = 0; i < self.length; ++i) {\r\n            for (let j = 0; j < other.length; ++j) {\r\n                if (self[i].equals(other[j])) {\r\n                    return self[i].clone();\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    gameOver() {\r\n        this._htmlHelper.gameOver();\r\n    }\r\n\r\n    initGame(difficulty: number, init: GamePreset) {\r\n        this._htmlHelper.gameProgress();\r\n        this._difficulty = difficulty;\r\n        this._field = init.field.clone();\r\n        this._snakes = Util.arrayClone(init.snakes);\r\n        this._food = this.createFood();\r\n        this._score = 0;\r\n\r\n        this.canvas.focus();\r\n\r\n        cancelAnimationFrame(this._frameId);\r\n        this._lastFrameTimeStamp = performance.now();\r\n        this._frameId = requestAnimationFrame(this.animationLoop.bind(this));\r\n    }\r\n\r\n    private createFood(): Coords {\r\n        let cells: Array<Coords> = [];\r\n        for (let i = 0; i < this._field.height; ++i) {\r\n            for (let j = 0; j < this._field.width; ++j) {\r\n                cells.push(new Coords(i, j));\r\n            }\r\n        }\r\n\r\n        cellLoop: for (let i = cells.length - 1; i >= 0; --i) {\r\n            for (let block of this._field.blocks) {\r\n                if (cells[i].equals(block)) {\r\n                    cells.splice(i, 1);\r\n                    continue cellLoop;\r\n                }\r\n            }\r\n\r\n            for (let snake of this._snakes) {\r\n                for (let block of snake.snake) {\r\n                    if (cells[i].equals(block)) {\r\n                        cells.splice(i, 1);\r\n                        continue cellLoop;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return Util.choice(cells);\r\n\r\n    }\r\n\r\n    private animationLoop(frameTimeStamp: number) {\r\n        if (frameTimeStamp - this._lastFrameTimeStamp < 1000 / this._difficulty) {\r\n            requestAnimationFrame(this.animationLoop.bind(this));\r\n            return;\r\n        }\r\n        this._lastFrameTimeStamp = frameTimeStamp;\r\n\r\n        this._htmlHelper.gameScore = this._score;\r\n\r\n        this._canvasHelper.drawField(this._field);\r\n        this._canvasHelper.drawFood(this._food);\r\n        this._canvasHelper.drawSnake(this._player, CanvasHelper.SnakeType.Player);\r\n        for (let enemy of this._enemies) {\r\n            this._canvasHelper.drawSnake(enemy, CanvasHelper.SnakeType.Enemy);\r\n        }\r\n\r\n        let obstacles = [];\r\n        obstacles.push(...this._field.blocks);\r\n        for (let snake of this._snakes) {\r\n            obstacles.push(...snake.snake);\r\n        }\r\n\r\n        for (let enemy of this._enemies) {\r\n            enemy.direction = AiHelper.decide(enemy.snake[0], this._food, obstacles, this._field.height, this._field.width);\r\n        }\r\n\r\n        for (let snake of this._snakes.filter(value => value.alive)) {\r\n            let obstacles = [];\r\n            obstacles.push(...this._field.blocks);\r\n            for (let enemy of this._snakes.filter(value => value != snake)) {\r\n                obstacles.push(...enemy.snake);\r\n            }\r\n            obstacles.push(...snake.snake.slice(1));\r\n            let coords = Game.checkCollisions([snake.snake[0]], obstacles);\r\n            console.log(coords);\r\n            if (coords) {\r\n                snake.alive = false;\r\n            }\r\n        }\r\n\r\n        for (let snake of this._snakes.filter(value => value.alive)) {\r\n            snake.move();\r\n        }\r\n\r\n        for (let snake of this._snakes) {\r\n            if (snake.snake[0].equals(this._food)) {\r\n                snake.feed();\r\n                this._food = this.createFood();\r\n                if (snake == this._player) {\r\n                    this._score += this._difficulty;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (c < Infinity) {\r\n            c++;\r\n            this._frameId = requestAnimationFrame(this.animationLoop.bind(this));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nlet c = 0;\n\n\n// WEBPACK FOOTER //\n// ./src/Game.ts","// import tilemap from './tilemap'\r\n// import Direction from './Direction'\r\n// import Snake from './Snake'\r\n// import Coords from \"./Coords\"\r\n// import Field from \"./Field\"\r\nimport Game from \"./Game\"\r\n// import GamePreset from \"./GamePreset\";\r\n// import Util from \"./Util\";\r\n\r\n\r\n// (window as any).Snake = Snake;\r\n// (window as any).Field = Field;\r\n// (window as any).Coords = Coords;\r\n// (window as any).Game = Game;\r\n// (window as any).Direction = Direction;\r\n// (window as any).tilemap = tilemap;\r\n// (window as any).GamePreset = GamePreset;\r\n// (window as any).Util = Util;\r\n//\r\nlet game = new Game(document.getElementById(\"game_root\"));\r\n// game.initGame(GamePreset.Box);\r\n(window as any).game = game;\r\n\r\nconsole.log(\"Bundle loaded\");\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import Snake from \"./Snake\";\r\nimport Direction from \"./Direction\";\r\nimport Game from \"./Game\";\r\nimport Coords from \"./Coords\";\r\nimport Util from \"./Util\";\r\nimport tilemap from \"./tilemap\";\r\nimport Field from \"./Field\";\r\n\r\nenum SnakeType { Player, Enemy }\r\n\r\nexport default class CanvasHelper {\r\n    static SnakeType = SnakeType;\r\n    private _game: Game;\r\n\r\n    constructor(game: Game) {\r\n        this._game = game;\r\n    }\r\n\r\n    private get _canvas() {\r\n        return this._game.canvas;\r\n    }\r\n\r\n    drawFood(point: Coords): void {\r\n        this.drawCell(tilemap.food, point.column, point.row, 0);\r\n    }\r\n\r\n    drawField(field: Field): void {\r\n        this._canvas.width = field.width * Game.CELL_SIZE;\r\n        this._canvas.height = field.height * Game.CELL_SIZE;\r\n        for (let i = 0; i < field.width; ++i) {\r\n            for (let j = 0; j < field.height; ++j) {\r\n                this.drawCell(tilemap.fieldEmpty, i, j, 0);\r\n            }\r\n        }\r\n        for (let block of field.blocks) {\r\n            this.drawCell(tilemap.fieldWall, block.column, block.row, 0);\r\n        }\r\n    }\r\n\r\n    drawSnake(snake: Snake, type: SnakeType): void {\r\n        let to: Direction, from: Direction;\r\n\r\n        for (let i = 0; i < snake.snake.length; ++i) {\r\n            let image: HTMLImageElement, canvasX, canvasY, angle;\r\n            if (i == 0) {\r\n                let head = snake.snake[i];\r\n                from = snake.direction.reverse();\r\n                switch (from) {\r\n                    case Direction.Down:\r\n                        angle = 0;\r\n                        break;\r\n                    case Direction.Left:\r\n                        angle = Math.PI / 2;\r\n                        break;\r\n                    case Direction.Up:\r\n                        angle = Math.PI;\r\n                        break;\r\n                    case Direction.Right:\r\n                        angle = Math.PI * 3 / 2;\r\n                        break;\r\n                }\r\n                image = tilemap.playerHead;\r\n\r\n                canvasX = head.column;\r\n                canvasY = head.row;\r\n            } else if (i == snake.snake.length - 1) {\r\n                let tail = snake.snake[i];\r\n                to = from.reverse();\r\n                switch (to) {\r\n                    case Direction.Up:\r\n                        angle = 0;\r\n                        break;\r\n                    case Direction.Right:\r\n                        angle = Math.PI / 2;\r\n                        break;\r\n                    case Direction.Down:\r\n                        angle = Math.PI;\r\n                        break;\r\n                    case Direction.Left:\r\n                        angle = Math.PI * 3 / 2;\r\n                        break;\r\n                }\r\n                image = tilemap.playerTail;\r\n\r\n                canvasX = tail.column;\r\n                canvasY = tail.row;\r\n            } else {\r\n                to = from.reverse();\r\n                let body = snake.snake[i];\r\n                let next = snake.snake[i + 1];\r\n                if (body.row == next.row) {\r\n                    if (Util.mod(body.column + 1, snake.columns) == next.column) {\r\n                        from = Direction.Right;\r\n                    } else if (Util.mod(body.column - 1, snake.columns) == next.column) {\r\n                        from = Direction.Left;\r\n                    }\r\n                } else if (body.column == next.column) {\r\n                    if (Util.mod(body.row + 1, snake.rows) == next.row) {\r\n                        from = Direction.Down;\r\n                    } else if (Util.mod(body.row - 1, snake.rows) == next.row) {\r\n                        from = Direction.Up;\r\n                    }\r\n                }\r\n                if ((from == Direction.Left && to == Direction.Right)\r\n                    || (from == Direction.Right && to == Direction.Left)) {\r\n                    image = tilemap.playerStraight;\r\n                    angle = Math.PI / 2;\r\n                } else if ((from == Direction.Up && to == Direction.Down)\r\n                    || (from == Direction.Down && to == Direction.Up)) {\r\n                    image = tilemap.playerStraight;\r\n                    angle = 0;\r\n                } else if ((from == Direction.Up && to == Direction.Right)\r\n                    || (from == Direction.Right && to == Direction.Up)) {\r\n                    image = tilemap.playerRotate;\r\n                    angle = 0;\r\n                } else if ((from == Direction.Right && to == Direction.Down)\r\n                    || (from == Direction.Down && to == Direction.Right)) {\r\n                    image = tilemap.playerRotate;\r\n                    angle = Math.PI / 2;\r\n                }\r\n                else if ((from == Direction.Down && to == Direction.Left)\r\n                    || (from == Direction.Left && to == Direction.Down)) {\r\n                    image = tilemap.playerRotate;\r\n                    angle = Math.PI;\r\n                }\r\n                else if ((from == Direction.Left && to == Direction.Up)\r\n                    || (from == Direction.Up && to == Direction.Left)) {\r\n                    image = tilemap.playerRotate;\r\n                    angle = Math.PI * 3 / 2;\r\n                }\r\n\r\n\r\n                canvasX = body.column;\r\n                canvasY = body.row;\r\n            }\r\n            // }\r\n\r\n            switch (image) {\r\n                case tilemap.playerHead:\r\n                    switch (type) {\r\n                        case SnakeType.Player:\r\n                            image = tilemap.playerHead;\r\n                            break;\r\n                        case SnakeType.Enemy:\r\n                            image = tilemap.enemyHead;\r\n                            break\r\n                    }\r\n                    break;\r\n                case tilemap.playerRotate:\r\n                    switch (type) {\r\n                        case SnakeType.Player:\r\n                            image = tilemap.playerRotate;\r\n                            break;\r\n                        case SnakeType.Enemy:\r\n                            image = tilemap.enemyRotate;\r\n                            break\r\n                    }\r\n                    break;\r\n                case tilemap.playerStraight:\r\n                    switch (type) {\r\n                        case SnakeType.Player:\r\n                            image = tilemap.playerStraight;\r\n                            break;\r\n                        case SnakeType.Enemy:\r\n                            image = tilemap.enemyStraight;\r\n                            break\r\n                    }\r\n                    break;\r\n                case tilemap.playerTail:\r\n                    switch (type) {\r\n                        case SnakeType.Player:\r\n                            image = tilemap.playerTail;\r\n                            break;\r\n                        case SnakeType.Enemy:\r\n                            image = tilemap.enemyTail;\r\n                            break\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.drawCell(image, canvasX, canvasY, angle);\r\n        }\r\n\r\n    };\r\n\r\n    drawCell(image: HTMLImageElement, canvasX: number, canvasY: number, angle: number): void {\r\n        let ctx: CanvasRenderingContext2D = this._canvas.getContext('2d');\r\n        ctx.save();\r\n        ctx.translate(canvasX * Game.CELL_SIZE, canvasY * Game.CELL_SIZE);\r\n        ctx.translate(Game.CELL_SIZE / 2, Game.CELL_SIZE / 2);\r\n        ctx.rotate(angle);\r\n        ctx.drawImage(\r\n            image,\r\n            -Game.CELL_SIZE / 2, -Game.CELL_SIZE / 2, Game.CELL_SIZE, Game.CELL_SIZE\r\n        );\r\n        ctx.restore();\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CanvasHelper.ts","declare function require(path: string): any;\r\n\r\n/*\r\nnamespace tilemap {\r\n    export const food: HTMLImageElement = new Image();\r\n    // food.onload = () => console.log(food);\r\n    food.src = require(\"./tilemap/food.png\");\r\n\r\n    export const fieldEmpty: HTMLImageElement = new Image();\r\n    // fieldEmpty.onload = () => console.log(fieldEmpty);\r\n    fieldEmpty.src = require(\"./tilemap/field_empty.png\");\r\n\r\n    export const fieldWall: HTMLImageElement = new Image();\r\n    // fieldWall.onload = () => console.log(fieldWall);\r\n    fieldWall.src = require(\"./tilemap/field_wall.png\");\r\n\r\n    export const enemyHead: HTMLImageElement = new Image();\r\n    // enemyHead.onload = () => console.log(enemyHead);\r\n    enemyHead.src = require(\"./tilemap/enemy_head.png\");\r\n\r\n    export const enemyTail: HTMLImageElement = new Image();\r\n    // enemyTail.onload = () => console.log(enemyTail);\r\n    enemyTail.src = require(\"./tilemap/enemy_tail.png\");\r\n\r\n    export const enemyStraight: HTMLImageElement = new Image();\r\n    // enemyStraight.onload = () => console.log(enemyStraight);\r\n    enemyStraight.src = require(\"./tilemap/enemy_straight.png\");\r\n\r\n    export const enemyRotate: HTMLImageElement = new Image();\r\n    // enemyRotate.onload = () => console.log(enemyRotate);\r\n    enemyRotate.src = require(\"./tilemap/enemy_rotate.png\");\r\n\r\n    export const playerHead: HTMLImageElement = new Image();\r\n    // playerHead.onload = () => console.log(playerHead);\r\n    playerHead.src = require(\"./tilemap/player_head.png\");\r\n\r\n    export const playerTail: HTMLImageElement = new Image();\r\n    // playerTail.onload = () => console.log(playerTail);\r\n    playerTail.src = require(\"./tilemap/player_tail.png\");\r\n\r\n    export const playerStraight: HTMLImageElement = new Image();\r\n    // playerStraight.onload = () => console.log(playerStraight);\r\n    playerStraight.src = require(\"./tilemap/player_straight.png\");\r\n\r\n    export const playerRotate: HTMLImageElement = new Image();\r\n    // playerRotate.onload = () => console.log(playerRotate);\r\n    playerRotate.src = require(\"./tilemap/player_rotate.png\");\r\n\r\n}\r\n*/\r\n\r\nclass Tilemap {\r\n    static food: HTMLImageElement = new Image();\r\n    static fieldEmpty: HTMLImageElement = new Image();\r\n    static fieldWall: HTMLImageElement = new Image();\r\n    static enemyHead: HTMLImageElement = new Image();\r\n    static enemyTail: HTMLImageElement = new Image();\r\n    static enemyStraight: HTMLImageElement = new Image();\r\n    static enemyRotate: HTMLImageElement = new Image();\r\n    static playerHead: HTMLImageElement = new Image();\r\n    static playerTail: HTMLImageElement = new Image();\r\n    static playerStraight: HTMLImageElement = new Image();\r\n    static playerRotate: HTMLImageElement = new Image();\r\n}\r\n\r\nTilemap.food.src = require(\"./tilemap/food.png\");\r\nTilemap.fieldEmpty.src = require(\"./tilemap/field_empty.png\");\r\nTilemap.fieldWall.src = require(\"./tilemap/field_wall.png\");\r\nTilemap.enemyHead.src = require(\"./tilemap/enemy_head.png\");\r\nTilemap.enemyTail.src = require(\"./tilemap/enemy_tail.png\");\r\nTilemap.enemyStraight.src = require(\"./tilemap/enemy_straight.png\");\r\nTilemap.enemyRotate.src = require(\"./tilemap/enemy_rotate.png\");\r\nTilemap.playerHead.src = require(\"./tilemap/player_head.png\");\r\nTilemap.playerTail.src = require(\"./tilemap/player_tail.png\");\r\nTilemap.playerStraight.src = require(\"./tilemap/player_straight.png\");\r\nTilemap.playerRotate.src = require(\"./tilemap/player_rotate.png\");\r\n\r\nexport default Tilemap\n\n\n// WEBPACK FOOTER //\n// ./src/tilemap.ts","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAAAW0lEQVRIS+3NSwoAIAxDwV7F+x9SEQyIRPw1G+nAg65SC2FPTrldIvUBkugfSB6xB8gFGx57wgZnXWFDq46wgd2OsIFVV9jQrCdscMwFG0au5A9A/gDkD8InzArfwu+wergE2QAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/food.png\n// module id = 8\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAIAAABLixI0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAAApSURBVEhLY6AyaKAGGDWLNDBqFmlg1CzSwKhZpIFRs0gDg9ws6gAGBgBU+xmuCMgmOQAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/field_empty.png\n// module id = 9\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAIAAABLixI0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAAAmSURBVEhLY3CgHhg1izQwahZpYNQs0sCoWaSBUbNIA6NmkQIcHADt0dTQuDtR2wAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/field_wall.png\n// module id = 10\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAABzSURBVEhL7cxBCsAgDERRT9P739CW0gGx32asWfrgbwKZsm3fjlpfpaHxviU0OOoXGoqa1jxLdHs+Te3jlUS3O1v/OJONnt1s9Oxmo2e3KTQQNY1Gon6hoVFLaLAvBQ2rNDSu0tC4SkPjKg2NqzQ0rkKlnP3K2OjUhp90AAAAAElFTkSuQmCC\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/enemy_head.png\n// module id = 11\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAABTSURBVEhL7c2hDcBAEMTAryb9d/hBZo4U4GM3kunu+eW597OMjVPGxilj45SxccrYOGVsnDI2Thkbp4yNU8bGKWPjlLFxytg4pcYPMH6w1hp0zgvIjuLpVy41MAAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/enemy_tail.png\n// module id = 12\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAABkSURBVEhLrcyxDQAgEIDAn8b9N9SKDqMFl9AyX9be1zI2p4zNKWNzyticMjanjM0pY3PK2JwyNqeMzSljc8rYnDI2p4zNKWNzyticMjanjM0pY3PK2JwyNqeMzSljc8rYnJ5mDpa4dqwbqZseAAAAAElFTkSuQmCC\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/enemy_straight.png\n// module id = 13\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xOdTWsmQAAABaSURBVEhL7cyxCcBAEAPBq8b9d/iOBA72QQIFDm5gQ2kszznXauhc1dC5qqFzVUPnqobOVQ2dqxo6VzV0/q2CjpMsNEyy0DDJQsMkCw2TbDR2i9CB01rrD2ZeG1xyZF3A6dwAAAAASUVORK5CYII=\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/enemy_rotate.png\n// module id = 14\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAAAiElEQVRIS+2MQQqFQAzF5v6XVvlE6A8ybe3WYDZjX9bHx5bj+iy/5jj8JKfvcGwnkx6OVGRa5y9wk7wxrRGHP2+yt0sSOR52JJHjYUcSOR52JJHjYUcSNTyuyLSOAxWZ9nBkJ5N3OPYkpzMcjXIyx+EoJ3McjnIyx+EoJ3McjnIyx+EoJxvWOgExoLpUIABYmgAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/player_head.png\n// module id = 15\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAAAaUlEQVRIS+2NOQrAMBDE9v+fzgEqBkEgMHZnYVUrxvOH63lfkvR4OCXp8XBK0uPhlKTHwylJj4dTkh4PpyQ9Hk5JejyckvR4OCXp8XBK0uPhlKTHwylJj4dTkjV4/JXTWrZ/cDgcdjJzA4EB0y3M9rbXAAAAAElFTkSuQmCC\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/player_tail.png\n// module id = 16\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAAAhElEQVRIS6WMMQrAQACD7v+fbjs4iNBSiMRNcv5wPXuTZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eWZKfHlmSnx5Zkp8eW5INzbsODXLJd/56nAAAAAElFTkSuQmCC\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/player_straight.png\n// module id = 17\n// module chunks = 0","module.exports = \"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuMTnU1rJkAAAAbUlEQVRIS+2MMQ6AMAzE+v9PA4OHyBKh0Q0steLt4rXD9dybTHIcrjLJcbjKJMfhKpMch6tMchyuMslxuMokx+EqkxyHLbMMR6eS6fHTVDI9fppKpsdPU8n0+GkqmW/8OJHEHn7elffD4fAva92z41i2DcwJlgAAAABJRU5ErkJggg==\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tilemap/player_rotate.png\n// module id = 18\n// module chunks = 0","import Direction from \"./Direction\";\r\nimport Coords from \"./Coords\";\r\nimport Util from \"./Util\";\r\n\r\nexport default class {\r\n    static decide(origin: Coords, destination: Coords, obstacles: Array<Coords>, height: number, width: number): Direction {\r\n        let hashCoords: (p: Coords) => number = (p) => {\r\n            return (p.row * width + p.column);\r\n        };\r\n\r\n        let unhashCoords: (p: number) => Coords = (p) => {\r\n            let r = (p / width | 0);\r\n            let c = p % width;\r\n            return new Coords(r, c);\r\n        };\r\n\r\n        let getHeuristic: (p1: Coords, p2: Coords) => number = (p1, p2) => {\r\n            let r = Math.min(\r\n                Math.abs(p1.row - p2.row),\r\n                // Infinity\r\n                height - Math.abs(p1.row - p2.row)\r\n                // Math.min(p1.row, p2.row) + height - Math.max(p1.row, p2.row)\r\n            );\r\n            let c = Math.min(\r\n                Math.abs(p1.column - p2.column),\r\n                // Infinity\r\n                width - Math.abs(p1.column - p2.column)\r\n                // Math.min(p1.column, p2.column) + width - Math.max(p1.column, p2.column)\r\n            );\r\n            return r + c;\r\n            // return 0;\r\n        };\r\n\r\n        let getNeighbours: (p: Coords) => Array<number> = (p) => {\r\n            let u = p.clone();\r\n            u.row = Util.mod(u.row - 1, height);\r\n            let d = p.clone();\r\n            d.row = Util.mod(d.row + 1, height);\r\n            let l = p.clone();\r\n            l.column = Util.mod(l.column - 1, width);\r\n            let r = p.clone();\r\n            r.column = Util.mod(r.column + 1, width);\r\n\r\n            let n = [u, d, l, r];\r\n\r\n            return n\r\n                .map(value => hashCoords(value))\r\n                .filter(value => !obstaclesH.includes(value));\r\n        };\r\n\r\n        let reconstructPath: (currentH: number) => Array<number> = (currentH: number) => {\r\n            let path: Array<number> = [];\r\n            while (cameFrom.has(currentH)) {\r\n                currentH = cameFrom.get(currentH);\r\n                path.push(currentH);\r\n            }\r\n            return path;\r\n        };\r\n\r\n        let originH = hashCoords(origin);\r\n        let destinationH = hashCoords(destination);\r\n        let obstaclesH: Array<number> = obstacles\r\n            .map(value => hashCoords(value))\r\n            .filter(value => value != originH && value != destinationH);\r\n\r\n        let closed: Set<number> = new Set<number>();\r\n        let open: Set<number> = new Set<number>();\r\n        open.add(originH);\r\n\r\n        let cameFrom: Map<number, number> = new Map<number, number>();\r\n\r\n        let gScore: Map<number, number> = new Map<number, number>();\r\n        gScore.set(originH, 0);\r\n\r\n        let fScore: Map<number, number> = new Map<number, number>();\r\n        fScore.set(originH, getHeuristic(origin, destination));\r\n\r\n        while (open.size > 0) {\r\n            let currentH: number;\r\n            {\r\n                let minF = Infinity;\r\n\r\n                for (let o of open) {\r\n                    let f = fScore.get(o);\r\n                    if (f == undefined) {\r\n                        f = Infinity;\r\n                    }\r\n                    if (f <= minF) {\r\n                        currentH = o;\r\n                        minF = f;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (currentH == destinationH) {\r\n                let path: Array<number> = reconstructPath(currentH);\r\n                path.unshift(destinationH);\r\n                // console.log(path);\r\n                // console.log(path.map(unhashCoords));\r\n\r\n                let from: Coords = unhashCoords(path.pop());\r\n                let to: Coords = unhashCoords(path.pop());\r\n\r\n                if (from.row == to.row) {\r\n                    if (Util.mod(from.column + 1, width) == to.column) {\r\n                        return Direction.Right;\r\n                    } else if (Util.mod(from.column - 1, width) == to.column) {\r\n                        return Direction.Left;\r\n                    }\r\n                } else if (from.column == to.column) {\r\n                    if (Util.mod(from.row + 1, height) == to.row) {\r\n                        return Direction.Down;\r\n                    } else if (Util.mod(from.row - 1, height) == to.row) {\r\n                        return Direction.Up;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            open.delete(currentH);\r\n            closed.add(currentH);\r\n\r\n            let neighboursH: Array<number> = getNeighbours(unhashCoords(currentH));\r\n            for (let neighbourH of neighboursH) {\r\n                if (closed.has(neighbourH)) {\r\n                    continue;\r\n                }\r\n\r\n                open.add(neighbourH);\r\n\r\n                let currentG = gScore.get(currentH);\r\n                if (currentG == undefined) {\r\n                    currentG = Infinity\r\n                }\r\n                let neighbourG = gScore.get(neighbourH);\r\n                if (neighbourH == undefined) {\r\n                    neighbourH = Infinity\r\n                }\r\n\r\n                let tgScore = currentG + 1;\r\n                if (tgScore >= neighbourG) {\r\n                    continue;\r\n                }\r\n\r\n                cameFrom.set(neighbourH, currentH);\r\n                gScore.set(neighbourH, tgScore);\r\n                fScore.set(neighbourH, tgScore + getHeuristic(unhashCoords(neighbourH), destination));\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/AiHelper.ts","import Game from \"./Game\";\r\nimport GamePreset from \"./GamePreset\";\r\n\r\nexport default class HtmlHelper {\r\n    private _game: Game;\r\n    private _htmlRoot: HTMLElement;\r\n    private _gameInit: HTMLDivElement;\r\n    private _gameProgress: HTMLDivElement;\r\n    private _gameOver: HTMLDivElement;\r\n    private _finalScore: HTMLSpanElement;\r\n\r\n    constructor(game: Game, htmlRoot: HTMLElement) {\r\n        this._game = game;\r\n        this._htmlRoot = htmlRoot;\r\n\r\n        let gameProgress: HTMLDivElement = document.createElement(\"div\");\r\n        {\r\n            let canvas = document.createElement(\"canvas\");\r\n            gameProgress.appendChild(canvas);\r\n            gameProgress.appendChild(document.createElement(\"br\"));\r\n\r\n            gameProgress.appendChild(document.createTextNode(\"Score: \"));\r\n            let gameScore = document.createElement(\"span\");\r\n            gameProgress.appendChild(gameScore);\r\n\r\n            this._gameScore = gameScore;\r\n            this._canvas = canvas;\r\n        }\r\n        this._gameProgress = gameProgress;\r\n\r\n        let gameInit: HTMLDivElement = document.createElement(\"div\");\r\n        {\r\n            let difficultyInput = document.createElement(\"input\");\r\n            {\r\n                difficultyInput.type = \"number\";\r\n                difficultyInput.min = \"1\";\r\n                difficultyInput.max = \"60\";\r\n                difficultyInput.value = \"10\";\r\n            }\r\n            gameInit.appendChild(document.createTextNode(\"Difficulty: \"));\r\n            gameInit.appendChild(difficultyInput);\r\n            gameInit.appendChild(document.createElement(\"br\"));\r\n\r\n            let fieldSelect = document.createElement(\"select\");\r\n            let fieldOption: HTMLOptionElement;\r\n\r\n            fieldOption = document.createElement(\"option\");\r\n            fieldOption.text = \"Infinite field\";\r\n            fieldSelect.add(fieldOption);\r\n\r\n            fieldOption = document.createElement(\"option\");\r\n            fieldOption.text = \"Box\";\r\n            fieldSelect.add(fieldOption);\r\n\r\n            fieldOption = document.createElement(\"option\");\r\n            fieldOption.text = \"Grid\";\r\n            fieldSelect.add(fieldOption);\r\n\r\n            gameInit.appendChild(document.createTextNode(\"Field: \"));\r\n            gameInit.appendChild(fieldSelect);\r\n            gameInit.appendChild(document.createElement(\"br\"));\r\n\r\n            let gameStart = document.createElement(\"button\");\r\n            {\r\n                gameStart.appendChild(document.createTextNode(\"Start\"));\r\n                gameStart.onclick = () => {\r\n                    let difficulty: number = Number(difficultyInput.value);\r\n                    let gamePreset;\r\n                    switch (fieldSelect.selectedIndex) {\r\n                        case 0:\r\n                            gamePreset = GamePreset.Inf;\r\n                            break;\r\n                        case 1:\r\n                            gamePreset = GamePreset.Box;\r\n                            break;\r\n                        case 2:\r\n                            gamePreset = GamePreset.Grid;\r\n                            break;\r\n\r\n                    }\r\n                    return game.initGame(difficulty, gamePreset);\r\n                };\r\n            }\r\n            gameInit.appendChild(gameStart);\r\n        }\r\n        this._gameInit = gameInit;\r\n\r\n        let gameOver: HTMLDivElement = document.createElement(\"div\");\r\n        {\r\n            gameOver.appendChild(document.createTextNode(\"You scored \"));\r\n            this._finalScore = document.createElement(\"span\");\r\n            gameOver.appendChild(this._finalScore);\r\n            gameOver.appendChild(document.createElement(\"br\"));\r\n\r\n            let playAgain: HTMLButtonElement = document.createElement(\"button\");\r\n            {\r\n                playAgain.appendChild(document.createTextNode(\"Play again\"));\r\n                playAgain.onclick = () => this.gameInit();\r\n            }\r\n\r\n            gameOver.appendChild(playAgain);\r\n        }\r\n        this._gameOver = gameOver;\r\n    }\r\n\r\n    private _gameScore: HTMLSpanElement;\r\n\r\n    set gameScore(value: number) {\r\n        this._gameScore.innerHTML = String(value);\r\n    }\r\n\r\n    get root(): HTMLElement {\r\n        return this._htmlRoot;\r\n    }\r\n\r\n    private _canvas: HTMLCanvasElement;\r\n\r\n    get canvas(): HTMLCanvasElement {\r\n        return this._canvas;\r\n    }\r\n\r\n    gameInit(): void {\r\n        while (this._htmlRoot.lastChild) {\r\n            this._htmlRoot.removeChild(this._htmlRoot.lastChild)\r\n        }\r\n        this._htmlRoot.appendChild(this._gameInit)\r\n    }\r\n\r\n    gameProgress(): void {\r\n        while (this._htmlRoot.lastChild) {\r\n            this._htmlRoot.removeChild(this._htmlRoot.lastChild)\r\n        }\r\n        this._htmlRoot.appendChild(this._gameProgress)\r\n    }\r\n\r\n    gameOver(): void {\r\n        while (this._htmlRoot.lastChild) {\r\n            this._htmlRoot.removeChild(this._htmlRoot.lastChild)\r\n        }\r\n        this._finalScore.innerHTML = String(this._game.score);\r\n        this._htmlRoot.appendChild(this._gameOver)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/HtmlHelper.ts","import Snake from \"./Snake\";\r\nimport Field from \"./Field\";\r\nimport Coords from \"./Coords\";\r\nimport Direction from \"./Direction\";\r\n\r\nexport default class GamePreset {\r\n\r\n    static Inf: GamePreset;\r\n    static Box: GamePreset;\r\n    static Grid: GamePreset;\r\n\r\n    constructor(snakes: Array<Snake>, field: Field) {\r\n        this._snakes = snakes;\r\n        this._field = field;\r\n    }\r\n\r\n    private _snakes: Array<Snake>;\r\n\r\n    get snakes(): Array<Snake> {\r\n        return this._snakes;\r\n    }\r\n\r\n    private _field: Field;\r\n\r\n    get field(): Field {\r\n        return this._field;\r\n    }\r\n\r\n}\r\n\r\n{\r\n    let height = 24;\r\n    let width = 30;\r\n    let field = new Field(height, width, []);\r\n    let player = new Snake(height, width, [new Coords(0, 2), new Coords(0, 1), new Coords(0, 0)], Direction.Right);\r\n    let enemyBL = new Snake(height, width, [new Coords(height - 3, 0), new Coords(height - 2, 0), new Coords(height-1, 0)], Direction.Up);\r\n    let enemyTR = new Snake(height, width, [new Coords(2, width - 1), new Coords(1, width - 1), new Coords(0, width - 1)], Direction.Down);\r\n    let enemyBR = new Snake(height, width, [new Coords(height - 1, width - 3), new Coords(height - 1, width - 2), new Coords(height - 1, width - 1)], Direction.Left);\r\n    let snakes = [player, enemyBL, enemyTR, enemyBR];\r\n    GamePreset.Inf = new GamePreset(snakes, field);\r\n}\r\n\r\n{\r\n    let height = 24;\r\n    let width = 30;\r\n    let fieldBlocks = [];\r\n    for (let i = 0; i < height; ++i) {\r\n        for (let j = 0; j < width; ++j) {\r\n            if (i == 0 || j == 0 || i == height - 1 || j == width - 1) {\r\n                fieldBlocks.push(new Coords(i, j));\r\n            }\r\n        }\r\n    }\r\n    let field = new Field(height, width, fieldBlocks);\r\n    let player = new Snake(height, width, [new Coords(2, 4), new Coords(2, 3), new Coords(2, 2)], Direction.Right);\r\n    let enemyBL = new Snake(height, width, [new Coords(height - 5, 2), new Coords(height - 4, 2), new Coords(height - 3, 2)], Direction.Up);\r\n    let enemyTR = new Snake(height, width, [new Coords(4, width - 3), new Coords(3, width - 3), new Coords(2, width - 3)], Direction.Down);\r\n    let enemyBR = new Snake(height, width, [new Coords(height - 3, width - 5), new Coords(height - 3, width - 4), new Coords(height - 3, width - 3)], Direction.Left);\r\n    let snakes = [player, enemyBL, enemyTR, enemyBR];\r\n    GamePreset.Box = new GamePreset(snakes, field);\r\n}\r\n\r\n{\r\n    let height = 24;\r\n    let width = 30;\r\n    let fieldBlocks = [];\r\n    for (let i = 0; i < height; i += 2) {\r\n        for (let j = 0; j < width; j += 2) {\r\n            fieldBlocks.push(new Coords(i, j));\r\n        }\r\n    }\r\n\r\n    let field = new Field(height, width, fieldBlocks);\r\n    let player = new Snake(height, width, [new Coords(1, 3), new Coords(1, 2), new Coords(1, 1)], Direction.Right);\r\n    let enemyBL = new Snake(height, width, [new Coords(height - 3, 1), new Coords(height - 2, 1), new Coords(height - 1, 1)], Direction.Up);\r\n    let enemyTR = new Snake(height, width, [new Coords(3, width - 1), new Coords(2, width - 1), new Coords(1, width - 1)], Direction.Down);\r\n    let enemyBR = new Snake(height, width, [new Coords(height - 1, width - 3), new Coords(height - 1, width - 2), new Coords(height - 1, width - 1)], Direction.Left);\r\n    let snakes = [player, enemyBL, enemyTR, enemyBR];\r\n    GamePreset.Grid = new GamePreset(snakes, field);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/GamePreset.ts","import Direction from \"./Direction\"\r\nimport Coords from \"./Coords\";\r\nimport Game from \"./Game\";\r\nimport Util from \"./Util\";\r\n\r\nexport default class Snake {\r\n    private _feed: boolean = false;\r\n    private _nextDirection: Direction = null;\r\n\r\n    constructor(fieldHeight: number, fieldWidth: number, initial: Array<Coords>, direction: Direction) {\r\n        this._rows = fieldHeight;\r\n        this._columns = fieldWidth;\r\n        this._direction = direction;\r\n        this._snake = initial;\r\n    }\r\n\r\n    private _rows: number;\r\n\r\n    get rows(): number {\r\n        return this._rows;\r\n    }\r\n\r\n    private _columns: number;\r\n\r\n    get columns(): number {\r\n        return this._columns;\r\n    }\r\n\r\n    private _snake: Array<Coords> = [];\r\n\r\n    get snake(): Array<Coords> {\r\n        return this._snake;\r\n    }\r\n\r\n    private _alive: boolean = true;\r\n\r\n    get alive(): boolean {\r\n        return this._alive;\r\n    }\r\n\r\n    set alive(value: boolean) {\r\n        this._alive = value;\r\n    }\r\n\r\n    private _direction: Direction;\r\n\r\n    get direction(): Direction {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: Direction) {\r\n        if (this._snake.length > 1) {\r\n            if (value === Direction.Right && this._direction === Direction.Left) {\r\n                return;\r\n            }\r\n            if (value === Direction.Left && this._direction === Direction.Right) {\r\n                return;\r\n            }\r\n            if (value === Direction.Up && this._direction === Direction.Down) {\r\n                return;\r\n            }\r\n            if (value === Direction.Down && this._direction === Direction.Up) {\r\n                return;\r\n            }\r\n        }\r\n        this._nextDirection = value;\r\n    }\r\n\r\n    move(): void {\r\n        let direction = this._nextDirection != null ? this._nextDirection : this.direction;\r\n        let head = this._snake[0].clone();\r\n        switch (direction) {\r\n            case Direction.Left:\r\n                head.column = Util.mod(head.column - 1, this._columns);\r\n                break;\r\n            case Direction.Right:\r\n                head.column = Util.mod(head.column + 1, this._columns);\r\n                break;\r\n            case Direction.Up:\r\n                head.row = Util.mod(head.row - 1, this._rows);\r\n                break;\r\n            case Direction.Down:\r\n                head.row = Util.mod(head.row + 1, this._rows);\r\n                break;\r\n        }\r\n        if (!this._feed) {\r\n            this._snake.pop();\r\n        }\r\n        this._snake.unshift(head);\r\n        this._direction = direction;\r\n        this._nextDirection = null;\r\n        this._feed = false;\r\n    }\r\n\r\n    feed(): void {\r\n        this._feed = true;\r\n    }\r\n\r\n    clone(): Snake {\r\n        return new Snake(this._rows, this._columns, Util.arrayClone(this._snake), this._direction);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Snake.ts","import Coords from \"./Coords\";\r\nimport Util from \"./Util\";\r\n\r\nexport default class Field {\r\n    constructor(height: number, width: number, blocks: Array<Coords>) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._blocks = blocks;\r\n    }\r\n\r\n    private _width: number;\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    private _height: number;\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    private _blocks: Array<Coords>;\r\n\r\n    get blocks(): Array<Coords> {\r\n        return this._blocks;\r\n    }\r\n\r\n    clone(): Field {\r\n        return new Field(this._height, this._width, Util.arrayClone(this._blocks));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Field.ts"],"sourceRoot":""}